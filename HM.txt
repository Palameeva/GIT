JSON
 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер.
 :  git clone https://github.com/Palameeva/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
 : touch new.json
 7. Добавить файл под гит.
 : git add .
 8. Закоммитить файл.
 : git commit -m « add new.json»
 9. Отправить файл на внешний GitHub репозиторий.
 : git push 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 : vim new.json
 { 
 "name":"Palameeva Anastasia Sergeevna" ,
    "age": 25 ,
    "number of pets": 0 ,
    "future desired salary": 1000
 } 
 : wq
 11. Отправить изменения на внешний репозиторий.
 : git add .
 : git commit -m « add info in new.json»
 : git push 
 12. Создать файл preferences.json
 : touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 : vim preferences.json
 {
        "favorite series": "You",
        "favorite film": "Titanic",
        "favorite food": "Pizza",
        "favorite time of year": "Summer",
        "country you would like to visit": "Italy"
 }
 : wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 : touch sklls.json
 : vim sklls.json
 { 
  "information about the skills to be learned": "I will know everything about testing"
 }
 15. Отправить сразу 2 файла на внешний репозиторий.
 : git add . && git commit -m « add info to sklls.json preferences.json && git push 
 16. На веб интерфейсе создать файл bug_report.json. 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON
 : git pull


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
 :  git clone https://github.com/Palameeva/XML.git
 23. Внутри локального XML создать файл “new.xml”.
  : touch new.xml
 24. Добавить файл под гит.
  : git add .
 25. Закоммитить файл.
: git commit -m « add new.xml»
 26. Отправить файл на внешний GitHub репозиторий.
  : git push 
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
: vim new.xml
    <name>Palameeva Anastasia Sergeevna</name>
    <age>25</age>
    <number of pets>0</number of pets>
    <future desired salary>1000</future desired salary>
:wq
 28. Отправить изменения на внешний репозиторий.
 : git add .
 : git commit -m « add info in new.xml»
 : git push 
 29. Создать файл preferences.xml
 : touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 : vim  preferences.xml
    <favorite series>You</favorite series>
    <favorite film>Titanic</favorite film>
    <favorite food>Pizza</favorite food>
    <favorite time of year>Summer</favorite time of year>
    <country you would like to visit>Italy</country you would like to visit>
 :wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 : touch sklls.xml 
 : vim sklls.xml 
  <information about the skills to be learned>I will know everything about testing</information about the skills to be learned>
 :wq
 32. Сделать коммит в одну строку.
 : git commit -am «add info to file»
 33. Отправить сразу 2 файла на внешний репозиторий.
 : git push
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML
 : git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.
 : git clone https://github.com/Palameeva/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
 : touch new.txt
 4. Добавить файл под гит.
 : git add . 
 5. Закоммитить файл.
 : git commit -m"add new.txt"
 6. Отправить файл на внешний GitHub репозиторий.
 : git push 
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. 
    name : Palameeva Anastasia Sergeevna ,
    age: 25 ,
    number of pets: 0 ,
    future desired salar: 1000
 : wq
 8. Отправить изменения на внешний репозиторий.
 : git add .
 : git commit -m « add info in new.txt»
 : git push 
 9. Создать файл preferences.txt
 : touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 : vim  preferences.txt
 :     favorite series:"You,
        favorite film: Titanic,
        favorite food: Pizza,
        favorite time of year: Summer,
        country you would like to visit: Italy
 :wq 
~                                                
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 : touch sklls.txt 
 : vim sklls.txt
 : information about the skills to be learned:
         I will know everything about testing                                           
 :wq
 12. Сделать коммит в одну строку.
  : git commit -am « add info»
 13. Отправить сразу 2 файла на внешний репозиторий.
  : git push
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT
 : git pull
